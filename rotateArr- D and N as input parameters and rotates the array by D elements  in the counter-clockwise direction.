/*Given an unsorted array arr[] of size N, rotate it by D elements in the counter-clockwise direction. 

Complete the function rotateArr() which takes the array, D and N as input parameters and rotates the array by D elements. 

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(1).

Example:
Input:
2
5 2
1 2 3 4 5 
10 3
2 4 6 8 10 12 14 16 18 20

Output:
3 4 5 1 2
8 10 12 14 16 18 20 2 4 6

Explanation :
Testcase 1: 1 2 3 4 5  when rotated by 2 elements, it becomes 3 4 5 1 2.
Testcase 2: 2 4 6 8 10 12 14 16 18 20  when rotated by 3 elements, it becomes 8 10 12 14 16 18 20 2 4 6.*/

#include<bits/stdc++.h>
using namespace std;

#include<bits/stdc++.h>
using namespace std;


// This function rotate array by D elements
// arr: input elements
// n: size of the array
void rotateArr(int arr[], int d, int n){
    
   // Your code here
   
   for(int i=0;i<d;i++)
   {
   		int temp=0,j;
   		temp=arr[0];
   		for(j=0;j<n-1;j++)
   		{
   			arr[j]=arr[j+1];
		}
		arr[j]=temp;
   }
    
}

int main() {
	//code
	
	int t;
	cin >> t;
	
	while(t--){
	    int n, d;
	    cin >> n >> d;
	    
	    int arr[n];
	    
	    for(int i = 0; i < n; i++){
	        cin >> arr[i];
	    }
	    
	    rotateArr(arr, d,n);
	    
	    for(int i =0;i<n;i++){
	        cout << arr[i] << " ";
	    }
	    cout << endl;
	    
	}
	
	return 0;
}
